[{"id":"3c606aa99b608ccb","type":"subflow","name":"light transition","info":"This node provides a light transition service for lights that don't have a built-in transition capability.  It does this by sending multiple `light.turn_on` events in a loop, calculating the appropriate brightness as it goes.\r\n\r\n# Input Message to start a transition\r\n\r\nThe node expects an input `msg` which contains the following to start a light transition:\r\n\r\n+ a `msg.topic` which specifies the target light or light group\r\n+ `msg.brightness_start` and `msg.brightness_end` integers, between 0 and 255\r\n+ `msg.transition_time` tells the node how long to take to make the transition between the defined brightnesses, in seconds\r\n\r\nNote: if `msg.brightness_end` is 0 the target light(s) will be turned off at the end of the transition\r\n\r\n# Other Control Messages\r\n\r\nThere are also a number of other control messages which the  node will accept:\r\n\r\n+ a `msg.payload` of `cancel` will immediately stop the transition wherever it is\r\n+ a `msg.payload` of `finish` will immediately set the target light(s) to the `msg.brightness_end` value\r\n\r\n# Configuration Settings\r\n\r\nThe node also offers several menu options which can be adjusted:\r\n\r\n+ a setting to enable/disable the progress status being shown on the node status\r\n+ a setting which when enabled sends a debug message every tick to the second output\r\n\r\n# Debug Message Format\r\nThe node sends a debug message to its second output on several events, if enabled:\r\n\r\n+ after every 'tick', which is defined by the transition time\r\n+ when the transition has completed\r\n+ if the transition is cancelled or is forced to finish early\r\n\r\nThe debug message includes properties containing the transition start time, progress percentage and the target light(s)","category":"","in":[{"x":130,"y":180,"wires":[{"id":"7009bb5fdd946224"}]}],"out":[{"x":2450,"y":200,"wires":[{"id":"beb5d0af505ecc62","port":0}]},{"x":2450,"y":500,"wires":[{"id":"88b02a5fd82c6ce8","port":1}]}],"env":[{"name":"show_progress","type":"bool","value":"true","ui":{"label":{"en-US":"Show transition progress on the node status"},"type":"checkbox"}},{"name":"send_progress","type":"bool","value":"false","ui":{"label":{"en-US":"Send a progress message to the second output every tick"},"type":"checkbox"}}],"meta":{"module":"node-red-contrib-ha_lighttransition","type":"lighttransition","version":"0.2.0","author":"Andy Stewart <andy.stewart@live.com>","description":"Light transition node for Home Assistant","desc":"Light transition node for Home Assistant","keywords":"node-red,lighttransition,light,transition,homeassistant,home-assistant,ha","license":"Apache-2.0"},"color":"#41BDF5","outputLabels":["Original msg","Debug msg"],"icon":"font-awesome/fa-lightbulb-o","status":{"x":2400,"y":420,"wires":[{"id":"88b02a5fd82c6ce8","port":0}]}},{"id":"332c2ae42ef036be","type":"function","z":"3c606aa99b608ccb","name":"Pre-loop checks","func":"// Require properties\n// msg.topic                The target light\n// msg.brightness           The target brightness_pct\n// msg.current_brightness   The current brightness_pct\n// msg.transition           The required transition time\n\n// Check for defaults\nif (msg.hasOwnProperty(\"transition_time\") === false) msg.transition_time = 60;\nif (msg.hasOwnProperty(\"brightness_start\") === false) msg.brightness_start = 1;\nif (msg.hasOwnProperty(\"brightness_end\") === false) msg.brightness_end = 255;\n\nif (isNaN(msg.transition_time)) {\n    msg.transition_time = 60\n}\nmsg.transition_time = Number(msg.transition_time)\n\nif (isNaN(msg.brightness_start)) {\n    msg.brightness_start = 1\n}\nmsg.brightness_start = Number(msg.brightness_start)\n\nif (isNaN(msg.brightness_end)) {\n    msg.brightness_end = 255\n}\nmsg.brightness_end = Number(msg.brightness_end)\n\n// Work out the difference between the current and desired brightess, step count and steps per second\nmsg.brightness_delta = parseInt(Math.abs(msg.brightness_start - msg.brightness_end))\n\nif (msg.brightness_delta < msg.transition_time) {\n    // Force the interval to be greater than the default one second\n    msg.transition_interval = parseInt(msg.transition_time / msg.brightness_delta) * 1000\n    msg.transition_time= msg.transition_time / (msg.transition_interval / 1000)\n} else {\n    msg.transition_interval = 1000\n}\n\n// Save some information for the cancel/finish messages\nflow.set(\"transition_status\", \"running\")\n\nvar dt = new Date();\nmsg.transition_start_time = dt.toLocaleString();\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":590,"y":200,"wires":[["64a850f0b803f909"]]},{"id":"64a850f0b803f909","type":"counter-loop","z":"3c606aa99b608ccb","name":"Transition loop","counter":"transition_counter","counterType":"msg","reset":true,"resetValue":"value-null","initial":0,"initialType":"num","operator":"lt","termination":"transition_time","terminationType":"msg","increment":1,"incrementType":"num","x":810,"y":200,"wires":[["4682fafb0edbaaa4"],["ec26ba20de7e9b9f"]]},{"id":"2c506cac9d04b437","type":"api-call-service","z":"3c606aa99b608ccb","name":"Set light brightness","server":"58215890.7c8288","version":5,"debugenabled":false,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["{{topic}}"],"data":"{\"brightness\": msg.new_brightness}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":860,"y":360,"wires":[["d2c35939687ba5fb","b1a080164bb6e417"]]},{"id":"4682fafb0edbaaa4","type":"switch","z":"3c606aa99b608ccb","name":"Determine final state","property":"brightness_end","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"num"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":1110,"y":200,"wires":[["ad9cf6f8f6ee716a"],["a5f0a2a159436c79"]]},{"id":"ad9cf6f8f6ee716a","type":"api-call-service","z":"3c606aa99b608ccb","name":"Turn the light off","server":"58215890.7c8288","version":5,"debugenabled":false,"domain":"light","service":"turn_off","areaId":[],"deviceId":[],"entityId":["{{topic}}"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1350,"y":160,"wires":[["16fe151e6ce0b540"]]},{"id":"ec26ba20de7e9b9f","type":"function","z":"3c606aa99b608ccb","name":"Calculate new brightness","func":"// How far through the loop are we?\nvar pctComplete = (msg.transition_counter / msg.transition_time) * 100\n\n// Work out what the brightness needs to be right now\nvar increment = (msg.brightness_delta * pctComplete) / 100\n\nif (msg.brightness_start < msg.brightness_end) {\n    // Brightness is increasing\n    msg.new_brightness = parseInt(msg.brightness_start + increment)\n} else {\n    // Brightness is decreasing\n    msg.new_brightness = parseInt(msg.brightness_start - increment)\n}\n\n// Force these properties each time - TODO... do we need to?\nmsg.payload = \"START\"\nmsg.timerType = \"delay\"\nmsg.timerDuration = msg.transition_interval\nmsg.timerDurationUnit = \"millisecond\"\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":620,"y":360,"wires":[["2c506cac9d04b437"]]},{"id":"a5f0a2a159436c79","type":"api-call-service","z":"3c606aa99b608ccb","name":"Force final brightness","server":"58215890.7c8288","version":5,"debugenabled":false,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["{{topic}}"],"data":"{\"brightness\": msg.brightness_end}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1370,"y":240,"wires":[["16fe151e6ce0b540"]]},{"id":"b1a080164bb6e417","type":"change","z":"3c606aa99b608ccb","name":"Progress update","rules":[{"t":"set","p":"payload","pt":"msg","to":"\"Progress: \" & $round(((msg.transition_counter / msg.transition_time) * 100)) & \"%\"","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":1640,"y":360,"wires":[["88b02a5fd82c6ce8"]]},{"id":"d2c35939687ba5fb","type":"controltimer","z":"3c606aa99b608ccb","name":"Transition delay","timerType":"delay","timerDurationUnit":"millisecond","timerDurationType":"num","timerDuration":1000,"timerLoopTimeoutUnit":"second","timerLoopTimeoutType":"num","timerLoopTimeout":0,"loopTimeoutMessageType":"str","loopTimeoutMessage":"LOOP_TIMEOUT","timerMaxLoopIterationsType":"num","timerMaxLoopIterations":0,"loopMaxIterationsMessageType":"str","loopMaxIterationsMessage":"MAX_LOOP_ITERATIONS","isRunningTimerProgressVisible":true,"outputReceivedMessageOnTimerTrigger":true,"outputReceivedMessageOnTimerHalt":false,"startTimerOnReceivalOfUnknownMessage":false,"resetTimerOnReceivalOfUnknownMessage":false,"resetTimerOnReceivalOfStartAction":false,"continueTimerOnReceivalOfStartAction":false,"isDebugModeEnabled":false,"timerTriggeredMessageType":"str","timerTriggeredMessage":"TIMER_TRIGGERED","timerHaltedMessageType":"str","timerHaltedMessage":"TIMER_HALTED","isStartActionEnabled":true,"isStopActionEnabled":true,"isResetActionEnabled":true,"isPauseActionEnabled":true,"isContinueActionEnabled":true,"actionPropertyNameType":"str","actionPropertyName":"payload","startActionNameType":"str","startActionName":"START","stopActionNameType":"str","stopActionName":"STOP","resetActionNameType":"str","resetActionName":"RESET","pauseActionNameType":"str","pauseActionName":"PAUSE","continueActionNameType":"str","continueActionName":"CONTINUE","x":580,"y":460,"wires":[["b42994f2c4692861"],[]]},{"id":"88b02a5fd82c6ce8","type":"function","z":"3c606aa99b608ccb","name":"Send update message","func":"// Send a status message\nvar newMsg = {};\nvar statusMsg = {};\nvar pctComplete;\n\nvar bShow = env.get(\"show_progress\")\nvar bSend = env.get(\"send_progress\")\n\nnewMsg.topic = msg.topic;\n\nif (msg.payload == \"Transition complete\") {\n    //Fudge the numbers a bit\n    pctComplete = 100;\n    newMsg.transition_current_brightness = msg.brightness_end\n\n    // Was it an early finish?\n    if (flow.get(\"transition_status\") == \"finish\") {\n        newMsg.transition_status = \"Finished early via control message\"\n    } else {\n        newMsg.transition_status = \"Finished\"\n    }\n\n    statusMsg.payload = newMsg.transition_status\n} else if (msg.payload == \"Transition cancelled\") {\n    newMsg.transition_status = \"Cancelled via control message\"\n    statusMsg.payload = msg.payload\n} else if (msg.payload == \"Unexpected control message\") {\n    newMsg.transition_status = msg.payload\n    statusMsg.payload = msg.payload\n} else {\n    pctComplete = Math.round((msg.transition_counter / msg.transition_time) * 100)\n    newMsg.transition_current_brightness = msg.new_brightness\n    newMsg.transition_status = \"In progress\"\n    newMsg.transition_percent_complete = pctComplete;\n    newMsg.transition_start_time = msg.transition_start_time;\n    statusMsg.payload = msg.payload;\n}\n\nif (bShow && bSend) {\n    return [statusMsg, newMsg];\n} else if (bShow) {\n    return [statusMsg, null];\n} else if (bSend) {\n    return [null, newMsg];\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2020,"y":460,"wires":[[],[]],"outputLabels":["Status update","Debug message"]},{"id":"16fe151e6ce0b540","type":"change","z":"3c606aa99b608ccb","name":"Completion update","rules":[{"t":"set","p":"payload","pt":"msg","to":"Transition complete","tot":"str"},{"t":"set","p":"env_1","pt":"msg","to":"show_progress","tot":"env"},{"t":"set","p":"env_2","pt":"msg","to":"send_progress","tot":"env"}],"action":"","property":"","from":"","to":"","reg":false,"x":1650,"y":200,"wires":[["88b02a5fd82c6ce8","493fb60b07e6a652"]]},{"id":"493fb60b07e6a652","type":"delay","z":"3c606aa99b608ccb","name":"","pauseType":"delay","timeout":"500","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":1970,"y":200,"wires":[["beb5d0af505ecc62"]]},{"id":"7009bb5fdd946224","type":"switch","z":"3c606aa99b608ccb","name":"Is this a control message?","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"cancel","vt":"str"},{"t":"eq","v":"finish","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":3,"x":320,"y":180,"wires":[["4520da7592e5f09d"],["4520da7592e5f09d"],["332c2ae42ef036be"]]},{"id":"87313dead72c678d","type":"change","z":"3c606aa99b608ccb","name":"Cancelling","rules":[{"t":"set","p":"transition_status","pt":"flow","to":"cancel","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1180,"y":20,"wires":[[]]},{"id":"503749a134264ff0","type":"change","z":"3c606aa99b608ccb","name":"Finish now","rules":[{"t":"set","p":"transition_status","pt":"flow","to":"finish","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1180,"y":60,"wires":[[]]},{"id":"b42994f2c4692861","type":"switch","z":"3c606aa99b608ccb","name":"Check for control messages","property":"transition_status","propertyType":"flow","rules":[{"t":"eq","v":"finish","vt":"str"},{"t":"eq","v":"cancel","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":3,"x":880,"y":460,"wires":[["4682fafb0edbaaa4"],["7518d4bee62ff452"],["7ff3fad9543ff6c0"]]},{"id":"7518d4bee62ff452","type":"change","z":"3c606aa99b608ccb","name":"Immediate cancel","rules":[{"t":"set","p":"payload","pt":"msg","to":"Transition cancelled","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1650,"y":480,"wires":[["88b02a5fd82c6ce8","493fb60b07e6a652"]]},{"id":"4520da7592e5f09d","type":"switch","z":"3c606aa99b608ccb","name":"Is a transition currently running?","property":"transition_status","propertyType":"flow","rules":[{"t":"nempty"},{"t":"empty"}],"checkall":"true","repair":false,"outputs":2,"x":640,"y":80,"wires":[["d96cdb52eb9cb19e"],["4a60088c641276b0"]]},{"id":"d96cdb52eb9cb19e","type":"switch","z":"3c606aa99b608ccb","name":"Process control message","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"cancel","vt":"str"},{"t":"eq","v":"finish","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":940,"y":40,"wires":[["87313dead72c678d"],["503749a134264ff0"]]},{"id":"54ecfbb4bf1e2095","type":"change","z":"3c606aa99b608ccb","name":"Unexpected control message","rules":[{"t":"set","p":"payload","pt":"msg","to":"Unexpected control message","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1680,"y":600,"wires":[["88b02a5fd82c6ce8"]]},{"id":"beb5d0af505ecc62","type":"change","z":"3c606aa99b608ccb","name":"Tidy up internal messages","rules":[{"t":"delete","p":"brightness_delta","pt":"msg"},{"t":"delete","p":"transition_interval","pt":"msg"},{"t":"delete","p":"transition_start_time","pt":"msg"},{"t":"delete","p":"new_brightness","pt":"msg"},{"t":"delete","p":"timerType","pt":"msg"},{"t":"delete","p":"timerDuration","pt":"msg"},{"t":"delete","p":"timerDurationUnit","pt":"msg"},{"t":"delete","p":"transition_counter","pt":"msg"},{"t":"set","p":"transition_status","pt":"flow","to":"","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":2210,"y":200,"wires":[[]]},{"id":"7ff3fad9543ff6c0","type":"link out","z":"3c606aa99b608ccb","name":"link out 7","mode":"link","links":["5ea1d78f220bf8a4"],"x":1065,"y":500,"wires":[]},{"id":"5ea1d78f220bf8a4","type":"link in","z":"3c606aa99b608ccb","name":"link in 7","links":["7ff3fad9543ff6c0"],"x":655,"y":260,"wires":[["64a850f0b803f909"]]},{"id":"4a60088c641276b0","type":"link out","z":"3c606aa99b608ccb","name":"link out 8","mode":"link","links":["414ba905268456de"],"x":845,"y":120,"wires":[]},{"id":"414ba905268456de","type":"link in","z":"3c606aa99b608ccb","name":"link in 8","links":["4a60088c641276b0"],"x":1495,"y":600,"wires":[["54ecfbb4bf1e2095"]]},{"id":"58215890.7c8288","type":"server","name":"Home Assistant","version":5,"addon":true,"rejectUnauthorizedCerts":true,"ha_boolean":"y|yes|true|on|home|open","connectionDelay":true,"cacheJson":true,"heartbeat":false,"heartbeatInterval":30,"areaSelector":"friendlyName","deviceSelector":"friendlyName","entitySelector":"friendlyName","statusSeparator":"at: ","statusYear":"hidden","statusMonth":"short","statusDay":"numeric","statusHourCycle":"h23","statusTimeFormat":"h:m","enableGlobalContextStore":true},{"id":"ced1b0f8830dd855","type":"subflow:3c606aa99b608ccb","z":"c04e9d3d.431e8","name":"","x":1320,"y":520,"wires":[["50fcc7c5bf0da81c"],["f7a728f0679e8366"]],"info":"This subflow/node facilitates the setting\r\nof multiple timers in an easy manner.\r\n\r\n# Input Message to set timer\r\n\r\nThe subflow expects an input `msg` which\r\ncontains the following to set a timer:\r\n\r\n+ a `msg.payload` which will be send once the timer has finished\r\n+ a `msg.duration` either in the format of a number in seconds or a string in the \"hh:mm:ss\" format\r\n+ an optional `msg.topic` which will also be send on completion\r\n\r\n# Other Control Messages\r\n\r\nThere are also a number of other control\r\nmessages which the subflow accept:\r\n\r\n+ a `msg.payload` of `reset` will reset all running timers\r\n+ a `msg.payload` of `debug` will send an array of all set timers to the secon debug output.\r\n+ a `msg` with a duration in seconds as a number or a string in the hh:mm:ss format with `msg.delete` set to true will delete the first set timer with a matching duration\r\n\r\n# Configuration Settings\r\n\r\nThe subflow although offers several menu options which can be adjusted:\r\n\r\n+ there is a setting which determines if a new timer should be appended to the list of existing timers and run in parallel or if every new timer should replace the previous\r\n+ a setting for the output format of the duration and the time left to-go which affects both the status display and the debug messages\r\n+ a setting to enable/disable the progress status being shown on the node status\r\n+ a setting which when enabled sends a debug message every second to the second output\r\n\r\n# Debug Message Format\r\nThe node sends a debug message to its second output on several events or in addition every second if configured. Those events are:\r\n\r\n+ When a new timer is set\r\n+ When a timer completes\r\n+ When a timer is deleted\r\n+ When the timers are reset\r\n\r\nThe format of this message is an array which\r\nincludes one object for every timer running\r\nthat includes useful information about each\r\ntimer in this format:\r\n```\r\n{\r\n    \"payload\":\"ON\",\r\n    \"duration\":\"00:00:25\",\r\n    \"due\":1607330155654,\r\n    \"toGo\":\"00:00:25\",\r\n    \"topic\":\"Test\"\r\n}\r\n```\r\nthe `toGo` and `duration` properties will be in the format configured in the nodes settings."}]
